# -*- mode: python -*-
# {{ansible_managed}}

# Unless otherwise noted, see
# - https://mathias-kettner.de/checkmk_configvars.html
# - https://mathias-kettner.de/checkmk_inventory.html

debug_log = '/opt/omd/{{omdistro_site}}/tmp/cmk-debug.log'

notification_logging = {{ omdistro_notification_logging }}

# Automatic inventory checks
# http://mathias-kettner.com/checkmk_inventory_checks.html
inventory_check_interval = {{ omdistro_inventory_check.interval }}
inventory_check_severity = {{ omdistro_inventory_check.severity }}

# Discovery related

# If some hosts are not resolvable via DNS, specify them here manually.
# This can only handle IPv4 addresses.
ipaddresses = {
{% for host in groups['all'] %}
{%     if 'ansible_ssh_host' in hostvars[host] %}
    "{{ host }}" : "{{ ansible_ssh_host }}",
{%     endif %}
{% endfor %}
{% for host in netmon.devices %}
{%     if 'ip' in host and 'v4' in host['ip'] %}
    "{{ host.name }}" : "{{ host.ip.v4 }}",
{%     endif %}
{% endfor %}
}

snmp_default_community = "{{ omdistro_snmp_default_community }}"

snmp_communities = [
{% for tag, comstr in omdistro_snmp_communities %}
    ( "{{ comstr }}", ["{{ tag }}"], ALL_HOSTS )
{% endfor %}
]

# Exclude hosts tagged '{{omdistro_no_snmpbulk_tag}}' from snmp bulk operations
bulkwalk_hosts += [
    ( [ "!{{omdistro_no_snmpbulk_tag}}" ], ALL_HOSTS )
]

snmp_check_interval += [
{% for interval in omdistro_snmp_check_interval %}
    ( {{ interval }} ),
{% endfor %}
]

# List of ifTypes to monitor
# See https://mathias-kettner.de/checkmk_check_if.html
if_inventory_porttypes = [
{% for iftype in omdistro_iftypes %}
    '{{iftype}}',  # {{omdistro_iftypes_descr[iftype]|default('NA')}}
{% endfor %}
]

{% if omdistro_if_inventory_uses_description %}
if_inventory_uses_description = True
{% elif omdistro_if_inventory_uses_alias %}
if_inventory_uses_alias = True
{% endif %}

# Set ping levels based on tags
ping_levels += [
{% for tag, levels in omdistro_ping_levels.iteritems() %}
    ( {{ levels }}, [ "{{ tag }}" ], ALL_HOSTS ),
{% endfor %}
]

# Define parameters for specific checks/checkgroups
{% for param, values in omdistro_checkgroup_parameters.iteritems() %}
checkgroup_parameters.setdefault('{{ param }}', [])
checkgroup_parameters['{{ param }}'] += [
{%     for value in values %}
    ( {{ value }} ),
{%     endfor %}
]

{% endfor %}

# Skip the following checks.
ignored_checktypes = [
{% for arg in omdistro_ignored_checktypes %}
    "{{arg}}",
{% endfor %}
]

# Skip monitoring of the following services
ignored_services = [
{% for value in omdistro_ignored_services %}
    ( {{ value }} ),
{% endfor %}
]

# Define extra host configuration parameters
{% for param in omdistro_extra_host_conf %}
extra_host_conf["{{ param }}"] = [
{%     for value in omdistro_extra_host_conf[param] %}
    ( {{ value }} )
{%     endfor %}
]
{% endfor %}

# Define extra service configuration parameters
{% for param, values in omdistro_extra_service_conf.iteritems() %}
extra_service_conf['{{ param }}'] = [
{%     for value in values %}
    ( {{ value }} ),
{%     endfor %}
]

{% endfor %}

# Define datasource configuration parameters
{% for value in omdistro_datasource_programs %}
datasource_programs = [
    ( {{ value }} ),
]
{% endfor %}

# Define host check commands
{% for value in omdistro_host_check_commands %}
host_check_commands += [
    ( {{ value }} ),
]
{% endfor %}

# Define dyndns hosts
{% for value in omdistro_dyndns_hosts %}
dyndns_hosts = [
    ( {{ value }} ),
]
{% endfor %}

# Define additonal customizations
{% for value in omdistro_custom_mainmk %}
{{ value }}
{% endfor %}
